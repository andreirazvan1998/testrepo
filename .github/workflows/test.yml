name: Run Pytest on PR

on:
  push:
    branches:
      - '**'  # Runs on all branches
  pull_request:
    types:
      - ready_for_review  # Trigger when PR is moved from draft to open

permissions:
  pull-requests: write

jobs:
  test_and_create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Check if PR exists
        id: pr_check
        run: |
          PR_URL=$(gh pr list --head ${{ github.ref_name }} --state open --json url -q '.[0].url')
          if [ -z "$PR_URL" ]; then
            echo "No PR found, creating a new one in draft mode."
            echo "PR_EXISTS=false" >> $GITHUB_ENV
          else
            echo "PR found, skipping creation."
            echo "PR_EXISTS=true" >> $GITHUB_ENV
            echo "PR_URL=$PR_URL" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request as Draft
        if: env.PR_EXISTS == 'false'
        run: |
          gh pr create -B main -H ${{ github.ref_name }} --title 'Merge ${{ github.ref_name }} into main' --body 'Created by GitHub action' --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Pytest
        id: pytest
        continue-on-error: false  # STOP workflow on failure (ensures checks fail)
        run: pytest test_script.py

      - name: Notify User If Tests Pass
        if: success() && env.PR_EXISTS == 'true'
        run: |
          echo "Tests passed. You can now move the PR to Ready for Review."
          gh pr comment "$PR_URL" --body "✅ Tests passed! You can now mark this PR as Ready for Review."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move PR to Draft if Tests Fail
        if: failure() && env.PR_EXISTS == 'true'
        run: |
          echo "Tests failed, forcing PR back to draft."
          gh pr ready --undo "$PR_URL"
          gh pr comment "$PR_URL" --body "❌ Tests failed! The PR has been moved back to Draft."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  rerun_tests_on_ready:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'ready_for_review'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Re-run Pytest Since PR Moved to Open
        id: pytest_rerun
        continue-on-error: false  # STOP workflow on failure (ensures checks fail)
        run: pytest test_script.py

      - name: Move PR Back to Draft if Tests Fail Again
        if: failure()
        run: |
          echo "PR was marked as ready, but tests failed again. Moving back to Draft."
          gh pr ready --undo "$GITHUB_REF"
          gh pr comment "$GITHUB_REF" --body "❌ Tests failed again after PR was marked Ready. Moving back to Draft."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
