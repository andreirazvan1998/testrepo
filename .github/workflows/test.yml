name: Run Pytest on PR

on:
  push:
    branches:
      - '**'  # Runs on all branches

permissions:
  pull-requests: write

jobs:
  test_and_create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest  # Ensure you have a requirements file

      - name: Check if PR exists
        id: pr_check
        run: |
          PR_URL=$(gh pr list --head ${{ github.ref_name }} --state open --json url -q '.[0].url')
          if [ -z "$PR_URL" ]; then
            echo "No PR found, creating a new one in draft mode."
            echo "PR_EXISTS=false" >> $GITHUB_ENV
          else
            echo "PR found, skipping creation."
            echo "PR_EXISTS=true" >> $GITHUB_ENV
            echo "PR_URL=$PR_URL" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request as Draft
        id: create_pr
        if: env.PR_EXISTS == 'false'
        run: |
          gh pr create -B main -H ${{ github.ref_name }} --title 'Merge ${{ github.ref_name }} into main' --body 'Created by GitHub action' --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Pytest
        id: pytest
        continue-on-error: true  # Allow workflow to continue even if tests fail
        run: pytest test_script.py

      - name: Check Test Status
        run: |
          TEST_STATUS=$(gh api repos/${{ github.repository }}/commits/${{ github.sha }}/status \
            --jq '.statuses[] | select(.context=="pytest") | .state' || echo "unknown")

          echo "Current test status: $TEST_STATUS"

          if [[ "$TEST_STATUS" == "failure" ]]; then
            echo "Tests failed, reverting PR to draft."
            gh pr ready --undo "${{ github.event.pull_request.html_url }}"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Allow User to Mark PR as Ready (Only if Tests Passed)
        if: success() && env.PR_EXISTS == 'true'
        run: |
          echo "Tests passed. User can mark PR as ready for review."
          gh pr edit "$PR_URL" --add-reviewer RadiCarolAlin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
