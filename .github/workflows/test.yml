name: Run Pytest on PR

on:
  push:
    branches:
      - '**'  # Runs on all branches
  pull_request:
    types:
      - ready_for_review  # Trigger when PR is moved from draft to open

permissions:
  pull-requests: write

jobs:
  test_and_create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Create Pull Request if it doesn't exist
        id: create_pr
        run: |
          # Ensure the branch is pushed to the remote first
          git push origin ${{ github.ref_name }} || echo "Branch already pushed"
          
          # Check if a PR already exists for the current branch
          PR_URL=$(gh pr list --head ${{ github.ref_name }} --state open --json url -q '.[0].url')
          if [ -z "$PR_URL" ]; then
            # Create a new PR if one doesn't exist
            echo "No PR found, creating a new one."
            gh pr create -B main -H ${{ github.ref_name }} --title "Merge ${{ github.ref_name }} into main" --body "Created by GitHub action" --draft
          else
            echo "PR already exists, skipping creation."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Pytest
        id: pytest
        continue-on-error: false  # STOP workflow on failure (ensures checks fail)
        run: pytest test_script.py

      - name: Notify User If Tests Pass
        if: success()
        run: |
          echo "Tests passed. You can now move the PR to Ready for Review."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move PR to Draft if Tests Fail
        if: failure()
        run: |
          echo "Tests failed, forcing PR back to draft."
          gh pr ready --undo "${{ github.event.pull_request.html_url }}"
          gh pr comment "${{ github.event.pull_request.html_url }}" --body "‚ùå Tests failed! The PR has been moved back to Draft."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move PR to Draft on every push
        run: |
          # Check if the PR exists and force it to draft mode
          PR_URL=$(gh pr list --head ${{ github.ref_name }} --state open --json url -q '.[0].url')
          if [ -n "$PR_URL" ]; then
            echo "Forcing PR back to draft after push."
            gh pr ready --undo "$PR_URL"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
