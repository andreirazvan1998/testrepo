name: Run Pytest on PR

on:
  push:
    branches:
      - '**'  # Rulează testele la orice commit
  pull_request:
    types:
      - ready_for_review  # Rulează testele când PR-ul iese din draft
  pull_request_target:
    types:
      - synchronize  # Rulează testele la update pe branch

permissions:
  pull-requests: write

jobs:
  test_and_manage_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest  # Asigură-te că ai un requirements.txt

      - name: Run Pytest
        id: pytest
        continue-on-error: true  # Evităm oprirea workflow-ului în caz de eșec
        run: pytest > pytest-results.txt

      - name: Check if tests failed
        id: check_tests
        run: |
          if grep -q "FAILED" pytest-results.txt; then
            echo "Tests failed! PR will be moved to draft."
            echo "TESTS_FAILED=true" >> $GITHUB_ENV
          else
            echo "Tests passed! PR can remain open."
            echo "TESTS_FAILED=false" >> $GITHUB_ENV
        shell: bash

      - name: Get PR URL
        id: get_pr
        run: |
          PR_URL=$(gh pr view ${{ github.event.pull_request.number }} --json url -q '.url')
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move PR to Draft if Tests Fail
        if: env.TESTS_FAILED == 'true'
        run: |
          echo "Tests failed, moving PR back to draft."
          gh pr ready --undo "$PR_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure PR Stays in Draft if Tests Fail Again
        if: env.TESTS_FAILED == 'true'
        run: |
          echo "Ensuring PR remains in draft."
          gh pr ready --undo "$PR_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert PR to Open if Tests Pass
        if: env.TESTS_FAILED == 'false'
        run: |
          echo "Tests passed, PR remains open."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
